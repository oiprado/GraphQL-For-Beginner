type Query {
    student(id: Int): StudentResponse
    students : [StudentResponse]
}

type Mutation {
    createStudent(request: CreateStudentRequest!): StudentResponse
}

input CreateStudentRequest {
    firstName: String
    lastName: String
    email: String
    street: String
    city: String
    subjectsLearning: [CreateSubjectRequest]
}

input CreateSubjectRequest {
    subjectName: String
    marksObtained: Float
}

type Author {
    firstName: String
    lastName: String
    phone: String!
}

type StudentResponse {
    id : Int
    firstName : String
    lastName : String
    email : String
    street : String
    city : String
    learningSubjects(subjectNameFilter: SubjectNameFilter): [SubjectResponse]
    fullName : String
}

enum SubjectNameFilter {
    All,
    Java
    MySQL,
    MongoDB
}

type SubjectResponse {
    id: Int
    subjectName: String
    marksObtained: Float
}
